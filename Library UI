= UDim2.new(0, 180, 1, 0),
                    ZIndex = 3,
                    TextSize = 12,
                    TextXAlignment = Enum.TextXAlignment.Right,
                    BackgroundColor3 = Color3.fromRGB(0.176471, 0.176471, 0.176471)
                })
                
                CreateInstance("UIPadding", dropdownSelectedLabel, {
                    PaddingRight = UDim.new(0, 30)
                })
                
                local dropdownSearchBox = CreateInstance("TextBox", dropdownContainer, {
                    Visible = false,
                    TextColor3 = Colors.White,
                    Text = "",
                    PlaceholderText = "Search...",
                    PlaceholderColor3 = Color3.fromRGB(120, 120, 130),
                    Font = Enum.Font.Gotham,
                    Name = "SearchBar",
                    Position = UDim2.new(0, 0, 0, 45),
                    Size = UDim2.new(0, 438, 0, 30),
                    ZIndex = 4,
                    TextSize = 12,
                    BackgroundColor3 = Colors.Gray.TogBox,
                    TextWrapped = true,
                })
                
                CreateInstance("UICorner", dropdownSearchBox, {
                    CornerRadius = UDim.new(0, 6)
                })
                
                CreateInstance("UIPadding", dropdownSearchBox, {
                    PaddingLeft = UDim.new(0, 10),
                    PaddingRight = UDim.new(0, 10)
                })
                
                local dropdownValuesContainer = CreateInstance("ScrollingFrame", dropdownContainer, {
                    ScrollBarImageColor3 = Colors.Cyan,
                    Active = true,
                    ScrollBarThickness = 4,
                    BackgroundTransparency = 0,
                    BackgroundColor3 = Colors.Gray.DarkButton,
                    Position = UDim2.new(0, 0, 0, 80),
                    ScrollBarImageTransparency = 0.3,
                    Visible = false,
                    Size = UDim2.new(0, 438, 0, 120),
                    CanvasSize = UDim2.new(0, 0, 0, 0),
                    AutomaticCanvasSize = Enum.AutomaticSize.Y,
                    ZIndex = 4
                })
                
                CreateInstance("UICorner", dropdownValuesContainer, {
                    CornerRadius = UDim.new(0, 6)
                })
                
                CreateInstance("UIStroke", dropdownValuesContainer, {
                    Color = Colors.Gray.Stroke,
                    Thickness = 1,
                    Transparency = 0.7
                })
                
                CreateInstance("UIPadding", dropdownValuesContainer, {
                    PaddingTop = UDim.new(0, 5),
                    PaddingBottom = UDim.new(0, 5),
                    PaddingLeft = UDim.new(0, 5),
                    PaddingRight = UDim.new(0, 5)
                })
                
                CreateInstance("UIListLayout", dropdownValuesContainer, {
                    Padding = UDim.new(0, 4)
                })
                
                addMouseWheelScroll(dropdownValuesContainer)
                
                local isOpen = false
                
                local function addDropButton(value)
                    local btn = CreateInstance("TextButton", dropdownValuesContainer, {
                        TextSize = 13,
                        Font = Enum.Font.Gotham,
                        TextColor3 = Colors.White,
                        Position = UDim2.new(0.0425531901, 0, 0.0840541124, 0),
                        Size = UDim2.new(1, -10, 0, 28),
                        AutoButtonColor = false,
                        Text = value,
                        BorderSizePixel = 0,
                        BackgroundColor3 = Colors.Gray.TogBox,
                    })
                    
                    CreateInstance("UICorner", btn, {
                        CornerRadius = UDim.new(0, 5)
                    })
                    
                    autobutcolor(btn, Colors.Gray.TogBox)
                    
                    btn.MouseButton1Click:Connect(function()
                        pcall(function()
                            local clickSound = Instance.new("Sound", workspace)
                            clickSound.SoundId = "rbxassetid://6895079853"
                            clickSound.Volume = 0.2
                            clickSound:Play()
                            game:GetService("Debris"):AddItem(clickSound, 2)
                        end)
                        
                        TweenService:Create(dropdownContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                            Size = UDim2.new(0, 438, 0, 38)
                        }):Play()
                        
                        TweenService:Create(dropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quart), {
                            Rotation = 0
                        }):Play()
                        
                        dropdownValuesContainer.Visible = false
                        dropdownSearchBox.Visible = false
                        dropdownSelectedLabel.Visible = true
                        dropdownSelectedLabel.Text = value
                        isOpen = false
                        
                        callback(value, dropdown)
                    end)
                    
                    return btn
                end
                
                for _, v in pairs(values) do
                    addDropButton(v)
                end
                
                function dropdown:AddValue(value)
                    addDropButton(value)
                end
                
                function dropdown:RemoveValue(value)
                    for _, v in pairs(dropdownValuesContainer:GetChildren()) do
                        if v:IsA("TextButton") and v.Text == value then
                            v:Destroy()
                        end
                    end
                end
                
                function dropdown:ClearValues()
                    for _, v in pairs(dropdownValuesContainer:GetChildren()) do
                        if v:IsA("TextButton") then
                            v:Destroy()
                        end
                    end
                end
                
                local searchHook = nil
                
                function dropdown:SetSearchHook(func)
                    searchHook = func
                end
                
                function dropdown:ResetSearchHook()
                    searchHook = nil
                end
                
                local function UpdateSearch(prop)
                    if prop ~= "Text" then
                        return
                    end
                    
                    if searchHook then
                        dropdown:ClearValues()
                        local results = searchHook(dropdownSearchBox.Text)
                        for _, v in pairs(results) do
                            dropdown:AddValue(v)
                        end
                    else
                        for i, button in pairs(dropdownValuesContainer:GetChildren()) do
                            if button:IsA("TextButton") then
                                local searchText = string.lower(dropdownSearchBox.Text)
                                if searchText ~= "" then
                                    local buttonText = string.lower(button.Text)
                                    if string.find(buttonText, searchText) then
                                        button.Visible = true
                                    else
                                        button.Visible = false
                                    end
                                else
                                    button.Visible = true
                                end
                            end
                        end
                    end
                end
                
                dropdownSearchBox.Changed:Connect(UpdateSearch)
                
                dropdownLabel.MouseButton1Click:Connect(function()
                    pcall(function()
                        local clickSound = Instance.new("Sound", workspace)
                        clickSound.SoundId = "rbxassetid://6895079853"
                        clickSound.Volume = 0.2
                        clickSound:Play()
                        game:GetService("Debris"):AddItem(clickSound, 2)
                    end)
                    
                    if not isOpen then
                        TweenService:Create(dropdownContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                            Size = UDim2.new(0, 438, 0, 210)
                        }):Play()
                        
                        TweenService:Create(dropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quart), {
                            Rotation = 180
                        }):Play()
                        
                        dropdownValuesContainer.Visible = true
                        dropdownSearchBox.Visible = true
                        dropdownSelectedLabel.Visible = false
                        isOpen = true
                    else
                        TweenService:Create(dropdownContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                            Size = UDim2.new(0, 438, 0, 38)
                        }):Play()
                        
                        TweenService:Create(dropdownArrow, TweenInfo.new(0.2, Enum.EasingStyle.Quart), {
                            Rotation = 0
                        }):Play()
                        
                        dropdownValuesContainer.Visible = false
                        dropdownSearchBox.Visible = false
                        dropdownSelectedLabel.Visible = true
                        isOpen = false
                    end
                end)
                
                function dropdown:GetValue()
                    return dropdownSelectedLabel.Text
                end
                
                function dropdown:SetValue(value)
                    dropdownSelectedLabel.Text = value
                end
                
                function dropdown:Destroy()
                    dropdownContainer:Destroy()
                end
           
                return dropdown
            end
       
            return tab
        end
        
        -- Entrance animation
        top.Size = UDim2.new(0, 0, 0, 0)
        top.Position = UDim2.new(0.5, 0, 0.5, 0)
        
        task.wait(0.1)
        
        TweenService:Create(top, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 612, 0, 42),
            Position = UDim2.new(0.5, -306, 0.5, -225)
        }):Play()
        
        task.wait(0.2)
        
        TweenService:Create(windowContainer, TweenInfo.new(0.4, Enum.EasingStyle.Quart), {
            Size = UDim2.new(0, 612, 0, 370)
        }):Play()
        
        return window
    end
   
    return library
end)()

return library
